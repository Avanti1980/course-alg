.reveal table {
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0;
  th,
  td {
    border: none;
    text-align: center;
    color: var(--base01);
    padding: 0.4rem 1rem 0.2rem 1rem;
  }
}

.reveal .tr-hover {
  tbody tr:hover {
    background-color: var(--solarized-base2);
  }
}

@for $i from 0 to 20 {
  @each $style in "solid", "dashed", "dotted" {
    // 每列左右边框
    @each $direction in "left", "right" {
      .reveal .column#{$i}-border-#{$direction}-#{$style} {
        th:nth-child(#{$i}),
        td:nth-child(#{$i}) {
          border-#{$direction}: 1px #{$style} var(--solarized-base01);
        }
      }
    }

    // 每行上下边框
    @each $direction in "top", "bottom" {
      .reveal .row#{$i}-border-#{$direction}-#{$style} {
        tbody tr:nth-child(#{$i}) {
          border-#{$direction}: 1px #{$style} var(--solarized-base01);
        }
      }
    }

    @each $direction in "left", "right", "top", "bottom" {
      @each $thick in "1", "2" {
        // 表头每格边框
        .reveal .column#{$i}-border#{$thick}-#{$direction}-#{$style}-head {
          th:nth-child(#{$i}) {
            border-#{$direction}: #{$thick}px #{$style} var(--solarized-base01);
          }
        }
        // 表身每格边框
        @for $j from 0 to 10 {
          .reveal
            .row#{$i}-column#{$j}-border#{$thick}-#{$direction}-#{$style} {
            tr:nth-child(#{$i}) {
              td:nth-child(#{$j}) {
                border-#{$direction}: #{$thick}px
                  #{$style}
                  var(--solarized-base01);
              }
            }
          }
        }
      }
    }
  }
  // 列加粗
  .reveal .column#{$i}-bold {
    td:nth-child(#{$i}) {
      font-weight: 900;
    }
  }
  // 首行深色
  .reveal .head-highlight-#{$i} {
    th:nth-child(n + #{$i}) {
      background-color: var(--solarized-base2);
    }
  }
  // 单元格着色
  @for $j from 0 to 20 {
    @each $color in "base03", "base02", "base01", "base00", "base0", "base1",
      "base2", "base3", "yellow", "orange", "red", "magenta", "violet", "blue",
      "cyan", "green"
    {
      .reveal .row#{$i}-column#{$j}-#{$color} {
        tr:nth-child(#{$i}) {
          td:nth-child(#{$j}) {
            background-color: var(--solarized-#{$color});
            color: var(--solarized-base3);
          }
        }
      }
    }
  }
}

// 棋盘着色
@mixin chessboard($color, $parity: "even") {
  @if $parity == "odd" {
    .reveal .chessboard-#{$color}-odd {
      // 首行奇数格着色
      th:nth-child(2n + 1),
      tr:nth-child(2n + 1) > td:nth-child(2n),
      tr:nth-child(2n) > td:nth-child(2n + 1) {
        background-color: var(--solarized-#{$color});
      }
    }
  } @else {
    .reveal .chessboard-#{$color}-even {
      // 首行偶数格着色
      th:nth-child(2n),
      tr:nth-child(2n + 1) > td:nth-child(2n + 1),
      tr:nth-child(2n) > td:nth-child(2n) {
        background-color: var(--solarized-#{$color});
      }
    }
  }
}

// 09.md 画华容道用
@include chessboard("blue", "odd");
@include chessboard("blue");
@include chessboard("base2", "odd");

@mixin queen8($color) {
  .reveal .queen8-#{$color} {
    tr:nth-child(2n + 1) > td:nth-child(2n + 3):nth-child(-2n + 9),
    tr:nth-child(2n + 1) > td:nth-child(2n + 14):nth-child(-2n + 20),
    tr:nth-child(2n) > td:nth-child(2n + 2):nth-child(-2n + 8),
    tr:nth-child(2n) > td:nth-child(2n + 13):nth-child(-2n + 19) {
      background-color: var(--solarized-#{$color});
    }
  }
}

@include queen8("base2");

@mixin queen4($color) {
  .reveal .queen4-#{$color} {
    tr:nth-child(2n) > td:nth-child(2n + 3):nth-child(-2n + 5),
    tr:nth-child(2n) > td:nth-child(2n + 9):nth-child(-2n + 11),
    tr:nth-child(2n) > td:nth-child(2n + 15):nth-child(-2n + 17),
    tr:nth-child(2n + 1) > td:nth-child(2n + 2):nth-child(-2n + 4),
    tr:nth-child(2n + 1) > td:nth-child(2n + 8):nth-child(-2n + 10),
    tr:nth-child(2n + 1) > td:nth-child(2n + 14):nth-child(-2n + 16) {
      background-color: var(--solarized-#{$color});
    }
  }
}

@include queen4("base2");

// 全边框
.reveal .fullborder {
  th,
  td {
    border: 1px solid var(--solarized-base01) !important;
  }
}

// 子表全边框 行 i -> j 列 k -> l 包含两端
// 行从0开始 0代表表头行 列从1开始
@mixin subtable-fullborder($i, $j, $k, $l) {
  .reveal .row#{$i}-#{$j}-column#{$k}-#{$l}-fullborder {
    @if $i == 0 {
      // 包含表头行
      th:nth-child(n + #{$k}):nth-child(-n + #{$l}) {
        border: 1px solid var(--solarized-base01);
      }
    }
    tr:nth-child(n + #{$i}):nth-child(-n + #{$j}) {
      td:nth-child(n + #{$k}):nth-child(-n + #{$l}) {
        border: 1px solid var(--solarized-base01);
      }
    }
  }
}

// 01.md 冒泡排序用
@include subtable-fullborder(1, 5, 2, 7);
@include subtable-fullborder(1, 4, 10, 15);

// 01.md 插入排序用
@include subtable-fullborder(1, 1, 2, 7);
@include subtable-fullborder(1, 1, 10, 15);
@include subtable-fullborder(3, 3, 2, 7);
@include subtable-fullborder(3, 3, 10, 15);
@include subtable-fullborder(5, 5, 2, 7);
@include subtable-fullborder(5, 5, 10, 15);

// 04.md LCS用
@include subtable-fullborder(2, 9, 3, 9);

// 08.md 8皇后用
@include subtable-fullborder(1, 8, 2, 9);
@include subtable-fullborder(1, 8, 13, 20);

// 08.md 4皇后回溯求解用
@include subtable-fullborder(1, 4, 2, 5);
@include subtable-fullborder(1, 4, 8, 11);
@include subtable-fullborder(1, 4, 14, 17);

// 09.md 4皇后分支限界画队列用
@include subtable-fullborder(0, 0, 2, 7);

// 09.md 画华容道用
@include subtable-fullborder(0, 3, 8, 11);

// 三线表
.reveal .threelines {
  th {
    border-top: 2px solid var(--solarized-base01); // 表头上边框
    border-bottom: 1px solid var(--solarized-base01); // 表头下边框
  }
  tbody tr:nth-last-child(1) {
    border-bottom: 2px solid var(--solarized-base01); // 最后一行下边框
  }
}

// 双线表
.reveal .twolines {
  th {
    border-top: 2px solid var(--solarized-base01); // 表头上边框
  }
  tbody tr:nth-last-child(1) {
    border-bottom: 2px solid var(--solarized-base01); // 最后一行下边框
  }
}

.reveal .tighttable {
  td {
    padding: 0.4rem 0.2rem 0.2rem 0.2rem;
  }
}

@mixin tightcell($i, $j) {
  .reveal .tightcell-#{$i}-#{$j} {
    @if $i == 0 {
      th:nth-child(#{$j}) {
        padding: 0.4rem 0.2rem 0.2rem 0.2rem;
      }
    } @else {
      tr:nth-child(#{$i}) > td:nth-child(#{$j}) {
        padding: 0.4rem 0.2rem 0.2rem 0.2rem;
      }
    }
  }
}

// 08.md 4皇后回溯求解用
@include tightcell(0, 7);
